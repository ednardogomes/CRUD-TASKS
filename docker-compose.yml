version: '3.5'

services:
  tasks-db:
    image: postgres:alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    container_name: tasks-db
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - tasks-network

  tasks-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tasks-app
    environment:
      - PORT=${PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '3000:3000'
    depends_on:
      - tasks-db
      - tasks-redis
    networks:
      - tasks-network
    volumes:
      - .:/app
      - /app/node_modules

  tasks-pgadmin4:
    image: dpage/pgadmin4
    restart: always
    container_name: tasks-pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - '5050:80'
    depends_on:
      - tasks-db

  tasks-redis:
    image: redis:latest
    container_name: tasks-redis
    ports:
      - '6379:6379'
    networks:
      - tasks-network
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis:/data
    restart: always

volumes:
  redis:
    driver: local

networks:
  tasks-network:
    driver: bridge
